user  nginx; # 指定Nginx服务器的用户名
worker_processes  1; # 指定服务器上只有一个Nginx进程(避免多进程问题)
error_log  /var/log/nginx/error.log warn; # 指定Nginx日志目录和记录的错误级别(warn)
pid        /var/run/nginx.pid; # 指定Nginx进程的PID文件路径

events {
  worker_connections  1024; # 指定服务器可同时处理1024个请求
}

http {
  include       /etc/nginx/mime.types; # 让Nginx可以识别服务器上的文件(mime.types包含了网页服务器可以识别的文件类型)
  default_type  application/octet-stream; # 指定默认的请求内容类型(此处使用二进制格式)
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"'; # 指定日志格式(命名为main), 依次记录: 客户端的IP地址、用户名、访问时间、请求URL、HTTP响应状态码、发送的字节数、来源URL、用户代理、X-Forwaeded-For头
  access_log  /var/log/nginx/access.log  main; # 指定Nginx的访问日志目录， 并指定日志格式为main
  sendfile        on; # 允许Nginx服务器直接从磁盘读取文件（可提供Nginx服务器性能， 但会增加服务器负载）
  keepalive_timeout  65; # 如何客户端在65秒内没有发送下一个请求， Web服务器将断开连接

  server {
    listen       80; # 监听80端口
    server_name  localhost; # 指定服务器的主机名或IP地址（设为localhost代表着只接受本地主机上的连接）

    location / { # URL匹配规则，告诉Nginx如何处理请求， 即将请求映射到待定的文件或目录
      # 不缓存html，防止程序更新后缓存继续生效
      if ($request_filename ~* .*\.(?:htm|html)$) {
        add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate"; # 添加响应头
        access_log on; # 记录访问日志
      }
      root   /soybean-admin/; # 根目录， 该目录下的所有文件和目录都可被访问
      index  index.html index.htm; # 默认索引页面， 优先使用index.html, 若找不到则尝试使用index.htm
      try_files $uri $uri/ /index.html; # nginx会尝试使用请求的URI，然后尝试使用URI加上斜杠， 最后尝试使用index.html, 都尝试失败则返回404
    }

    location /clover-api/v1 {
        proxy_set_header Host $host; # 设置代理服务器发送到主机的HTTP请求头
        proxy_set_header X-Real-IP $remote_addr; # 设置X-Real-IP头, 包含客户端的真实IP地址
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 设置X-Forwarded-For头, 包含客户端的IP地址
        proxy_set_header REMOTE-HOST $remote_addr; # 设置REMOTE-HOST头, 值为客户端的远程主机地址

        proxy_pass http://wzctest.wzc520pyf.cn/api/v1; # 后台接口地址
        proxy_redirect default; # 指定代理服务器如何重定向客户端请求(可以是URL或状态码)
        # 跨越设置
        add_header Access-Control-Allow-Origin *; # 允许所有源访问资源
        add_header Access-Control-Allow-Headers X-Requested-With; # 允许X-Requested-With头部(这个头部被用来标识Ajax请求)的请求通过跨域访问
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS; # 允许的HTTP请求方法
    }

    error_page   500 502 503 504  /50x.html; # 指定发生错误时返回的html文件
    location = /50x.html { # 匹配规则
      root   /usr/share/nginx/html; # 根目录
    }
  }
}
